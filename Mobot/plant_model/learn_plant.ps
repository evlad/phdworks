%!PS-Adobe-2.0
%%Title: ../learn_plant.ps
%%Creator: gnuplot 3.7 patchlevel 1
%%CreationDate: Fri Jun  8 00:40:05 2001
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 554 770
%%Orientation: Landscape
%%Pages: (atend)
%%EndComments
/gnudict 256 dict def
gnudict begin
/Color false def
/Solid false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
/vshift -40 def
/dl {10 mul} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow { currentpoint stroke M
  0 vshift R show } def
/Rshow { currentpoint stroke M
  dup stringwidth pop neg vshift R show } def
/Cshow { currentpoint stroke M
  dup stringwidth pop -2 div vshift R show } def
/UP { dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def } def
/DL { Color {setrgbcolor Solid {pop []} if 0 setdash }
 {pop pop pop Solid {pop []} if 0 setdash} ifelse } def
/BL { stroke userlinewidth 2 mul setlinewidth } def
/AL { stroke userlinewidth 2 div setlinewidth } def
/UL { dup gnulinewidth mul /userlinewidth exch def
      10 mul /udl exch def } def
/PL { stroke userlinewidth setlinewidth } def
/LTb { BL [] 0 0 0 DL } def
/LTa { AL [1 udl mul 2 udl mul] 0 setdash 0 0 0 setrgbcolor } def
/LT0 { PL [] 1 0 0 DL } def
/LT1 { PL [4 dl 2 dl] 0 1 0 DL } def
/LT2 { PL [2 dl 3 dl] 0 0 1 DL } def
/LT3 { PL [1 dl 1.5 dl] 1 0 1 DL } def
/LT4 { PL [5 dl 2 dl 1 dl 2 dl] 0 1 1 DL } def
/LT5 { PL [4 dl 3 dl 1 dl 3 dl] 1 1 0 DL } def
/LT6 { PL [2 dl 2 dl 2 dl 4 dl] 0 0 0 DL } def
/LT7 { PL [2 dl 2 dl 2 dl 2 dl 2 dl 4 dl] 1 0.3 0 DL } def
/LT8 { PL [2 dl 2 dl 2 dl 2 dl 2 dl 2 dl 2 dl 4 dl] 0.5 0.5 0.5 DL } def
/Pnt { stroke [] 0 setdash
   gsave 1 setlinecap M 0 0 V stroke grestore } def
/Dia { stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt } def
/Pls { stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
  } def
/Box { stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt } def
/Crs { stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke } def
/TriU { stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt  } def
/Star { 2 copy Pls Crs } def
/BoxF { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V  hpt2 0 V  0 vpt2 V
  hpt2 neg 0 V  closepath fill } def
/TriUF { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill } def
/TriD { stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt  } def
/TriDF { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill } def
/Pent { stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt } def
/PentF { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore } def
/Circle { stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt } def
/CircleF { stroke [] 0 setdash hpt 0 360 arc fill } def
/C0 { BL [] 0 setdash 2 copy moveto vpt 90 450  arc } bind def
/C1 { BL [] 0 setdash 2 copy        moveto
       2 copy  vpt 0 90 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C2 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 90 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C3 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C4 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 180 270 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C5 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 90 arc
       2 copy moveto
       2 copy  vpt 180 270 arc closepath fill
               vpt 0 360 arc } bind def
/C6 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 90 270 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C7 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 0 270 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C8 { BL [] 0 setdash 2 copy moveto
      2 copy vpt 270 360 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C9 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 270 450 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C10 { BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
       2 copy moveto
       2 copy vpt 90 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C11 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 180 arc closepath fill
       2 copy moveto
       2 copy  vpt 270 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C12 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 180 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C13 { BL [] 0 setdash  2 copy moveto
       2 copy  vpt 0 90 arc closepath fill
       2 copy moveto
       2 copy  vpt 180 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C14 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 90 360 arc closepath fill
               vpt 0 360 arc } bind def
/C15 { BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/Rec   { newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
       neg 0 rlineto closepath } bind def
/Square { dup Rec } bind def
/Bsquare { vpt sub exch vpt sub exch vpt2 Square } bind def
/S0 { BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare } bind def
/S1 { BL [] 0 setdash 2 copy vpt Square fill Bsquare } bind def
/S2 { BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare } bind def
/S3 { BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare } bind def
/S4 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare } bind def
/S5 { BL [] 0 setdash 2 copy 2 copy vpt Square fill
       exch vpt sub exch vpt sub vpt Square fill Bsquare } bind def
/S6 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare } bind def
/S7 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
       2 copy vpt Square fill
       Bsquare } bind def
/S8 { BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare } bind def
/S9 { BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare } bind def
/S10 { BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
       Bsquare } bind def
/S11 { BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
       Bsquare } bind def
/S12 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare } bind def
/S13 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
       2 copy vpt Square fill Bsquare } bind def
/S14 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
       2 copy exch vpt sub exch vpt Square fill Bsquare } bind def
/S15 { BL [] 0 setdash 2 copy Bsquare fill Bsquare } bind def
/D0 { gsave translate 45 rotate 0 0 S0 stroke grestore } bind def
/D1 { gsave translate 45 rotate 0 0 S1 stroke grestore } bind def
/D2 { gsave translate 45 rotate 0 0 S2 stroke grestore } bind def
/D3 { gsave translate 45 rotate 0 0 S3 stroke grestore } bind def
/D4 { gsave translate 45 rotate 0 0 S4 stroke grestore } bind def
/D5 { gsave translate 45 rotate 0 0 S5 stroke grestore } bind def
/D6 { gsave translate 45 rotate 0 0 S6 stroke grestore } bind def
/D7 { gsave translate 45 rotate 0 0 S7 stroke grestore } bind def
/D8 { gsave translate 45 rotate 0 0 S8 stroke grestore } bind def
/D9 { gsave translate 45 rotate 0 0 S9 stroke grestore } bind def
/D10 { gsave translate 45 rotate 0 0 S10 stroke grestore } bind def
/D11 { gsave translate 45 rotate 0 0 S11 stroke grestore } bind def
/D12 { gsave translate 45 rotate 0 0 S12 stroke grestore } bind def
/D13 { gsave translate 45 rotate 0 0 S13 stroke grestore } bind def
/D14 { gsave translate 45 rotate 0 0 S14 stroke grestore } bind def
/D15 { gsave translate 45 rotate 0 0 S15 stroke grestore } bind def
/DiaE { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke } def
/BoxE { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke } def
/TriUE { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke } def
/TriDE { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke } def
/PentE { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore } def
/CircE { stroke [] 0 setdash 
  hpt 0 360 arc stroke } def
/Opaque { gsave closepath 1 setgray fill grestore 0 setgray closepath } def
/DiaW { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke } def
/BoxW { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke } def
/TriUW { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke } def
/TriDW { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke } def
/PentW { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore } def
/CircW { stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke } def
/BoxFill { gsave Rec 1 setgray fill grestore } def
end
%%EndProlog
%%Page: 1 1
gnudict begin
gsave
50 50 translate
0.100 0.100 scale
90 rotate
0 -5040 translate
0 setgray
newpath
(Helvetica) findfont 120 scalefont setfont
1.000 UL
LTb
0.500 UL
LTa
492 240 M
6504 0 V
1.000 UL
LTb
492 240 M
63 0 V
6441 0 R
-63 0 V
420 240 M
(-200) Rshow
0.500 UL
LTa
492 733 M
6504 0 V
1.000 UL
LTb
492 733 M
63 0 V
6441 0 R
-63 0 V
420 733 M
(-150) Rshow
0.500 UL
LTa
492 1227 M
6504 0 V
1.000 UL
LTb
492 1227 M
63 0 V
6441 0 R
-63 0 V
-6513 0 R
(-100) Rshow
0.500 UL
LTa
492 1720 M
6504 0 V
1.000 UL
LTb
492 1720 M
63 0 V
6441 0 R
-63 0 V
-6513 0 R
(-50) Rshow
0.500 UL
LTa
492 2213 M
6504 0 V
1.000 UL
LTb
492 2213 M
63 0 V
6441 0 R
-63 0 V
-6513 0 R
(0) Rshow
0.500 UL
LTa
492 2707 M
6504 0 V
1.000 UL
LTb
492 2707 M
63 0 V
6441 0 R
-63 0 V
-6513 0 R
(50) Rshow
0.500 UL
LTa
492 3200 M
6504 0 V
1.000 UL
LTb
492 3200 M
63 0 V
6441 0 R
-63 0 V
-6513 0 R
(100) Rshow
0.500 UL
LTa
492 3693 M
6504 0 V
1.000 UL
LTb
492 3693 M
63 0 V
6441 0 R
-63 0 V
-6513 0 R
(150) Rshow
0.500 UL
LTa
492 4187 M
6504 0 V
1.000 UL
LTb
492 4187 M
63 0 V
6441 0 R
-63 0 V
-6513 0 R
(200) Rshow
0.500 UL
LTa
492 4680 M
6504 0 V
1.000 UL
LTb
492 4680 M
63 0 V
6441 0 R
-63 0 V
-6513 0 R
(250) Rshow
0.500 UL
LTa
492 240 M
0 4440 V
1.000 UL
LTb
492 240 M
0 63 V
0 4377 R
0 -63 V
492 120 M
(0) Cshow
0.500 UL
LTa
1215 240 M
0 4440 V
1.000 UL
LTb
1215 240 M
0 63 V
0 4377 R
0 -63 V
0 -4497 R
(10) Cshow
0.500 UL
LTa
1937 240 M
0 4440 V
1.000 UL
LTb
1937 240 M
0 63 V
0 4377 R
0 -63 V
0 -4497 R
(20) Cshow
0.500 UL
LTa
2660 240 M
0 4440 V
1.000 UL
LTb
2660 240 M
0 63 V
0 4377 R
0 -63 V
0 -4497 R
(30) Cshow
0.500 UL
LTa
3383 240 M
0 4440 V
1.000 UL
LTb
3383 240 M
0 63 V
0 4377 R
0 -63 V
0 -4497 R
(40) Cshow
0.500 UL
LTa
4105 240 M
0 4440 V
1.000 UL
LTb
4105 240 M
0 63 V
0 4377 R
0 -63 V
0 -4497 R
(50) Cshow
0.500 UL
LTa
4828 240 M
0 4440 V
1.000 UL
LTb
4828 240 M
0 63 V
0 4377 R
0 -63 V
0 -4497 R
(60) Cshow
0.500 UL
LTa
5551 240 M
0 4440 V
1.000 UL
LTb
5551 240 M
0 63 V
0 4377 R
0 -63 V
0 -4497 R
(70) Cshow
0.500 UL
LTa
6273 240 M
0 4137 V
0 240 R
0 63 V
1.000 UL
LTb
6273 240 M
0 63 V
0 4377 R
0 -63 V
0 -4497 R
(80) Cshow
0.500 UL
LTa
6996 240 M
0 4440 V
1.000 UL
LTb
6996 240 M
0 63 V
0 4377 R
0 -63 V
0 -4497 R
(90) Cshow
1.000 UL
LTb
492 240 M
6504 0 V
0 4440 V
-6504 0 V
492 240 L
3744 4860 M
(Mobile robot: learning trajectory) Cshow
1.000 UL
LT0
6429 4557 M
(Real plant) Rshow
6501 4557 M
351 0 V
492 427 M
72 10 V
73 -10 V
72 0 V
72 0 V
72 0 V
73 0 V
72 0 V
72 0 V
72 0 V
73 10 V
72 -10 V
72 0 V
72 20 V
73 119 V
72 79 V
72 78 V
73 178 V
72 306 V
72 316 V
72 315 V
73 316 V
72 365 V
72 326 V
72 296 V
73 227 V
72 118 V
72 -20 V
72 -79 V
73 -69 V
72 -79 V
72 -78 V
73 -70 V
72 -88 V
72 -79 V
72 -79 V
73 -79 V
72 -59 V
72 -50 V
72 -59 V
73 -59 V
72 -20 V
72 -39 V
72 19 V
73 20 V
72 40 V
72 49 V
73 49 V
72 40 V
72 59 V
72 79 V
73 69 V
72 59 V
72 59 V
72 69 V
73 70 V
72 88 V
72 79 V
72 119 V
73 118 V
72 109 V
72 98 V
73 109 V
72 138 V
72 128 V
72 148 V
73 217 V
72 158 V
1.000 UL
LT1
6429 4437 M
(NN plant) Rshow
6501 4437 M
351 0 V
492 427 M
72 10 V
73 36 V
72 -2 V
72 -1 V
72 1 V
73 0 V
72 0 V
72 0 V
72 0 V
73 4 V
72 -2 V
72 -2 V
72 8 V
73 61 V
72 67 V
72 61 V
73 109 V
72 247 V
72 343 V
72 376 V
73 375 V
72 426 V
72 393 V
72 319 V
73 215 V
72 105 V
72 -20 V
72 -97 V
73 -98 V
72 -83 V
72 -79 V
73 -75 V
72 -88 V
72 -89 V
72 -91 V
73 -87 V
72 -73 V
72 -56 V
72 -61 V
73 -71 V
72 -35 V
72 -34 V
72 14 V
73 32 V
72 55 V
72 61 V
73 64 V
72 50 V
72 62 V
72 87 V
73 87 V
72 69 V
72 60 V
72 68 V
73 72 V
72 85 V
72 80 V
72 102 V
73 105 V
72 93 V
72 74 V
73 71 V
72 85 V
72 81 V
72 78 V
73 95 V
72 74 V
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Helvetica
%%Pages: 1
