# dcontrf parameters
# $Id: dcontrf.par,v 1.1 2008-06-08 21:04:16 evlad Exp $

########################################
# Mode of the modeling
input_kind = stream
#input_kind = file

# (input_kind = stream) Length of series
stream_len = 50000

# (input_kind = stream,file) Auto update frequency; 0 to disable
nnc_auf = 50

# NNC INPUT MODE: "e+r", "e+de", "e+e+..."
nnc_mode = e+r

# Linear (or combined) plant transfer function
linplant_tf = ../plant.tf

# (input_kind = stream) Input transfer (or combined) functions
refer_tf = ../refer.tf
noise_tf = ../noise.tf

# (input_kind = file) Maximum number of epochs; 0 is unlimited
max_epochs = 0

# (input_kind = file) Input files
in_r = r.dat
in_n = n.dat

# (input_kind = stream) Output files
out_r = r_out.dat
out_n = n_out.dat

# Output files
out_u = u.dat
out_e = e.dat
out_y = y.dat
out_nn_y = nn_y.dat
out_ny = ny.dat

# Logging of controller's and plant's inputs
c_in = c_in.dat
p_in = p_in.dat

# Neural net files
in_nnp_file = ../1me/nnp_res.nn
in_nnc_file = ../2/nnc_pre.nn
out_nnc_file = nnc_res.nn

# Optional to list inputs of NN-P as a error conductor in
# backpropagation chain.  Defined automatically by default as a scalar.
errfetch_output = 0 1

# Optional to errfetch_output is vector of weights used to sum fetched
# errors into one scalar value
# IMPORTANT! if not defined then errors are not summed!
# 1 errfetch_sumweights = 1.0 0.0
# 2 
errfetch_sumweights = 0.5 0.5
# 3 errfetch_sumweights = 0.8 0.2
# 4 errfetch_sumweights = 1.0 0.5
# 5 errfetch_sumweights = 1.0 1.0

# Tracking learning process: ABSMEAN MEAN RMS STDDEV MAX MIN ABSMAX
cerr_trace_file = cerr_trace.dat
iderr_trace_file = iderr_trace.dat

# Skip up to given number of epochs if MSE growing at start
skip_growing = 35

# Stop learning if...
finish_on_grow = 35
finish_decrease = 1e-6

# Special halt condition syntax:
#   HaltCond ::= { StatId Cond Value ";" } StatId Cond Value
# where
#   StatId   ::= ABSMEAN | MEAN | RMS | STDDEV | MAX | MIN | ABSMAX
#   Cond     ::= "<" | "=" | ">"
#   Value    ::= FloatingPointNumber
# Separated for control and identification error statistics
finish_cerr_cond = absmean > 1.0 ; rms > 1.0
finish_iderr_cond = rms > 6.0

# Learning algorithm setup
eta = 0.002
eta_output = 0.0002
alpha = 0.0
