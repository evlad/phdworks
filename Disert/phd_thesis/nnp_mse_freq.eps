%!PS-Adobe-2.0 EPSF-2.0
%%BoundingBox: 0 0 661 486
%%HiResBoundingBox: 0 0 658.5 484
%%Title: nnp_mse_freq.ps
%%Creator: gnuplot 3.7 patchlevel 1
%%CreationDate: Sun Oct  7 23:16:09 2001
%%EndComments
% EPSF created by ps2eps 1.64
%%BeginProlog
-80 556 translate
-90 rotate
save
countdictstack
mark
newpath
/showpage {} def
/setpagedevice {pop} def
%%EndProlog
%%Page 1 1
/gnudict 256 dict def
gnudict begin
/Color false def
/Solid false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
/vshift -60 def
/dl {10 mul} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow { currentpoint stroke M
  0 vshift R show } def
/Rshow { currentpoint stroke M
  dup stringwidth pop neg vshift R show } def
/Cshow { currentpoint stroke M
  dup stringwidth pop -2 div vshift R show } def
/UP { dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def } def
/DL { Color {setrgbcolor Solid {pop []} if 0 setdash }
 {pop pop pop Solid {pop []} if 0 setdash} ifelse } def
/BL { stroke userlinewidth 2 mul setlinewidth } def
/AL { stroke userlinewidth 2 div setlinewidth } def
/UL { dup gnulinewidth mul /userlinewidth exch def
      10 mul /udl exch def } def
/PL { stroke userlinewidth setlinewidth } def
/LTb { BL [] 0 0 0 DL } def
/LTa { AL [1 udl mul 2 udl mul] 0 setdash 0 0 0 setrgbcolor } def
/LT0 { PL [] 1 0 0 DL } def
/LT1 { PL [4 dl 2 dl] 0 1 0 DL } def
/LT2 { PL [2 dl 3 dl] 0 0 1 DL } def
/LT3 { PL [1 dl 1.5 dl] 1 0 1 DL } def
/LT4 { PL [5 dl 2 dl 1 dl 2 dl] 0 1 1 DL } def
/LT5 { PL [4 dl 3 dl 1 dl 3 dl] 1 1 0 DL } def
/LT6 { PL [2 dl 2 dl 2 dl 4 dl] 0 0 0 DL } def
/LT7 { PL [2 dl 2 dl 2 dl 2 dl 2 dl 4 dl] 1 0.3 0 DL } def
/LT8 { PL [2 dl 2 dl 2 dl 2 dl 2 dl 2 dl 2 dl 4 dl] 0.5 0.5 0.5 DL } def
/Pnt { stroke [] 0 setdash
   gsave 1 setlinecap M 0 0 V stroke grestore } def
/Dia { stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt } def
/Pls { stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
  } def
/Box { stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt } def
/Crs { stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke } def
/TriU { stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt  } def
/Star { 2 copy Pls Crs } def
/BoxF { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V  hpt2 0 V  0 vpt2 V
  hpt2 neg 0 V  closepath fill } def
/TriUF { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill } def
/TriD { stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt  } def
/TriDF { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill } def
/Pent { stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt } def
/PentF { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore } def
/Circle { stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt } def
/CircleF { stroke [] 0 setdash hpt 0 360 arc fill } def
/C0 { BL [] 0 setdash 2 copy moveto vpt 90 450  arc } bind def
/C1 { BL [] 0 setdash 2 copy        moveto
       2 copy  vpt 0 90 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C2 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 90 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C3 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C4 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 180 270 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C5 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 90 arc
       2 copy moveto
       2 copy  vpt 180 270 arc closepath fill
               vpt 0 360 arc } bind def
/C6 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 90 270 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C7 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 0 270 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C8 { BL [] 0 setdash 2 copy moveto
      2 copy vpt 270 360 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C9 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 270 450 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C10 { BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
       2 copy moveto
       2 copy vpt 90 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C11 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 180 arc closepath fill
       2 copy moveto
       2 copy  vpt 270 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C12 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 180 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C13 { BL [] 0 setdash  2 copy moveto
       2 copy  vpt 0 90 arc closepath fill
       2 copy moveto
       2 copy  vpt 180 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C14 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 90 360 arc closepath fill
               vpt 0 360 arc } bind def
/C15 { BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/Rec   { newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
       neg 0 rlineto closepath } bind def
/Square { dup Rec } bind def
/Bsquare { vpt sub exch vpt sub exch vpt2 Square } bind def
/S0 { BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare } bind def
/S1 { BL [] 0 setdash 2 copy vpt Square fill Bsquare } bind def
/S2 { BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare } bind def
/S3 { BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare } bind def
/S4 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare } bind def
/S5 { BL [] 0 setdash 2 copy 2 copy vpt Square fill
       exch vpt sub exch vpt sub vpt Square fill Bsquare } bind def
/S6 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare } bind def
/S7 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
       2 copy vpt Square fill
       Bsquare } bind def
/S8 { BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare } bind def
/S9 { BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare } bind def
/S10 { BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
       Bsquare } bind def
/S11 { BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
       Bsquare } bind def
/S12 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare } bind def
/S13 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
       2 copy vpt Square fill Bsquare } bind def
/S14 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
       2 copy exch vpt sub exch vpt Square fill Bsquare } bind def
/S15 { BL [] 0 setdash 2 copy Bsquare fill Bsquare } bind def
/D0 { gsave translate 45 rotate 0 0 S0 stroke grestore } bind def
/D1 { gsave translate 45 rotate 0 0 S1 stroke grestore } bind def
/D2 { gsave translate 45 rotate 0 0 S2 stroke grestore } bind def
/D3 { gsave translate 45 rotate 0 0 S3 stroke grestore } bind def
/D4 { gsave translate 45 rotate 0 0 S4 stroke grestore } bind def
/D5 { gsave translate 45 rotate 0 0 S5 stroke grestore } bind def
/D6 { gsave translate 45 rotate 0 0 S6 stroke grestore } bind def
/D7 { gsave translate 45 rotate 0 0 S7 stroke grestore } bind def
/D8 { gsave translate 45 rotate 0 0 S8 stroke grestore } bind def
/D9 { gsave translate 45 rotate 0 0 S9 stroke grestore } bind def
/D10 { gsave translate 45 rotate 0 0 S10 stroke grestore } bind def
/D11 { gsave translate 45 rotate 0 0 S11 stroke grestore } bind def
/D12 { gsave translate 45 rotate 0 0 S12 stroke grestore } bind def
/D13 { gsave translate 45 rotate 0 0 S13 stroke grestore } bind def
/D14 { gsave translate 45 rotate 0 0 S14 stroke grestore } bind def
/D15 { gsave translate 45 rotate 0 0 S15 stroke grestore } bind def
/DiaE { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke } def
/BoxE { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke } def
/TriUE { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke } def
/TriDE { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke } def
/PentE { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore } def
/CircE { stroke [] 0 setdash 
  hpt 0 360 arc stroke } def
/Opaque { gsave closepath 1 setgray fill grestore 0 setgray closepath } def
/DiaW { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke } def
/BoxW { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke } def
/TriUW { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke } def
/TriDW { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke } def
/PentW { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore } def
/CircW { stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke } def
/BoxFill { gsave Rec 1 setgray fill grestore } def
/MFshow {{dup dup 0 get findfont exch 1 get scalefont setfont
     [ currentpoint ] exch dup 2 get 0 exch rmoveto dup dup 5 get exch 4 get
     {show} {stringwidth pop 0 rmoveto}ifelse dup 3 get
     {2 get neg 0 exch rmoveto pop} {pop aload pop moveto}ifelse} forall} bind def
/MFwidth {0 exch {dup 3 get{dup dup 0 get findfont exch 1 get scalefont setfont
      5 get stringwidth pop add}
    {pop} ifelse} forall} bind def
/MLshow { currentpoint stroke M
  0 exch R MFshow } bind def
/MRshow { currentpoint stroke M
  exch dup MFwidth neg 3 -1 roll R MFshow } def
/MCshow { currentpoint stroke M
  exch dup MFwidth -2 div 3 -1 roll R MFshow } def
end
%%EndProlog
%%Page: 1 1
gnudict begin
gsave
50 50 translate
0.100 0.100 scale
90 rotate
0 -5040 translate
0 setgray
newpath
(Helvetica-Oblique) findfont 180 scalefont setfont
1.000 UL
LTb
0.500 UL
LTa
846 540 M
6048 0 V
1.000 UL
LTb
846 540 M
63 0 V
5985 0 R
-63 0 V
 stroke
738 540 M
[ [(Helvetica-Oblique) 180.0 0.0 true true (0.001)]
] -60.0 MRshow
0.500 UL
LTa
846 1036 M
6048 0 V
1.000 UL
LTb
846 1036 M
31 0 V
6017 0 R
-31 0 V
0.500 UL
LTa
846 1326 M
6048 0 V
1.000 UL
LTb
846 1326 M
31 0 V
6017 0 R
-31 0 V
0.500 UL
LTa
846 1531 M
6048 0 V
1.000 UL
LTb
846 1531 M
31 0 V
6017 0 R
-31 0 V
0.500 UL
LTa
846 1691 M
6048 0 V
1.000 UL
LTb
846 1691 M
31 0 V
6017 0 R
-31 0 V
0.500 UL
LTa
846 1821 M
6048 0 V
1.000 UL
LTb
846 1821 M
31 0 V
6017 0 R
-31 0 V
0.500 UL
LTa
846 1931 M
6048 0 V
1.000 UL
LTb
846 1931 M
31 0 V
6017 0 R
-31 0 V
0.500 UL
LTa
846 2027 M
6048 0 V
1.000 UL
LTb
846 2027 M
31 0 V
6017 0 R
-31 0 V
0.500 UL
LTa
846 2111 M
6048 0 V
1.000 UL
LTb
846 2111 M
31 0 V
6017 0 R
-31 0 V
0.500 UL
LTa
846 2186 M
6048 0 V
1.000 UL
LTb
846 2186 M
63 0 V
5985 0 R
-63 0 V
 stroke
738 2186 M
[ [(Helvetica-Oblique) 180.0 0.0 true true (0.01)]
] -60.0 MRshow
0.500 UL
LTa
846 2682 M
6048 0 V
1.000 UL
LTb
846 2682 M
31 0 V
6017 0 R
-31 0 V
0.500 UL
LTa
846 2972 M
6048 0 V
1.000 UL
LTb
846 2972 M
31 0 V
6017 0 R
-31 0 V
0.500 UL
LTa
846 3178 M
6048 0 V
1.000 UL
LTb
846 3178 M
31 0 V
6017 0 R
-31 0 V
0.500 UL
LTa
846 3337 M
6048 0 V
1.000 UL
LTb
846 3337 M
31 0 V
6017 0 R
-31 0 V
0.500 UL
LTa
846 3468 M
6048 0 V
1.000 UL
LTb
846 3468 M
31 0 V
6017 0 R
-31 0 V
0.500 UL
LTa
846 3578 M
6048 0 V
1.000 UL
LTb
846 3578 M
31 0 V
6017 0 R
-31 0 V
0.500 UL
LTa
846 3673 M
6048 0 V
1.000 UL
LTb
846 3673 M
31 0 V
6017 0 R
-31 0 V
0.500 UL
LTa
846 3757 M
6048 0 V
1.000 UL
LTb
846 3757 M
31 0 V
6017 0 R
-31 0 V
0.500 UL
LTa
846 3833 M
6048 0 V
1.000 UL
LTb
846 3833 M
63 0 V
5985 0 R
-63 0 V
 stroke
738 3833 M
[ [(Helvetica-Oblique) 180.0 0.0 true true (0.1)]
] -60.0 MRshow
0.500 UL
LTa
846 4328 M
3393 0 V
2547 0 R
108 0 V
1.000 UL
LTb
846 4328 M
31 0 V
6017 0 R
-31 0 V
0.500 UL
LTa
846 4618 M
3393 0 V
2547 0 R
108 0 V
1.000 UL
LTb
846 4618 M
31 0 V
6017 0 R
-31 0 V
0.500 UL
LTa
846 4824 M
6048 0 V
1.000 UL
LTb
846 4824 M
31 0 V
6017 0 R
-31 0 V
0.500 UL
LTa
846 540 M
0 4284 V
1.000 UL
LTb
846 540 M
0 31 V
0 4253 R
0 -31 V
0.500 UL
LTa
1665 540 M
0 4284 V
1.000 UL
LTb
1665 540 M
0 31 V
0 4253 R
0 -31 V
0.500 UL
LTa
2245 540 M
0 4284 V
1.000 UL
LTb
2245 540 M
0 31 V
0 4253 R
0 -31 V
0.500 UL
LTa
2696 540 M
0 4284 V
1.000 UL
LTb
2696 540 M
0 31 V
0 4253 R
0 -31 V
0.500 UL
LTa
3064 540 M
0 4284 V
1.000 UL
LTb
3064 540 M
0 31 V
0 4253 R
0 -31 V
0.500 UL
LTa
3375 540 M
0 4284 V
1.000 UL
LTb
3375 540 M
0 31 V
0 4253 R
0 -31 V
0.500 UL
LTa
3645 540 M
0 4284 V
1.000 UL
LTb
3645 540 M
0 31 V
0 4253 R
0 -31 V
0.500 UL
LTa
3883 540 M
0 4284 V
1.000 UL
LTb
3883 540 M
0 31 V
0 4253 R
0 -31 V
0.500 UL
LTa
4095 540 M
0 4284 V
1.000 UL
LTb
4095 540 M
0 63 V
0 4221 R
0 -63 V
 stroke
4095 360 M
[ [(Helvetica-Oblique) 180.0 0.0 true true (0.1)]
] -60.0 MCshow
0.500 UL
LTa
5495 540 M
0 3681 V
0 540 R
0 63 V
1.000 UL
LTb
5495 540 M
0 31 V
0 4253 R
0 -31 V
0.500 UL
LTa
6313 540 M
0 3681 V
0 540 R
0 63 V
1.000 UL
LTb
6313 540 M
0 31 V
0 4253 R
0 -31 V
0.500 UL
LTa
6894 540 M
0 4284 V
1.000 UL
LTb
6894 540 M
0 31 V
0 4253 R
0 -31 V
1.000 UL
LTb
846 540 M
6048 0 V
0 4284 V
-6048 0 V
846 540 L
 stroke
3870 90 M
[ [(Bookman-LightItalic) 200.0 0.0 true true (f)]
] -66.7 MCshow
2.000 UL
LT0
6075 4671 M
[ [(Helvetica-Oblique) 180.0 0.0 true true (Step trained NN)]
] -60.0 MRshow
6183 4671 M
495 0 V
6526 3725 M
5495 2645 L
4095 2027 L
2696 1691 L
1875 1349 L
1296 1070 L
846 960 L
2.000 UL
LT1
6075 4491 M
[ [(Helvetica-Oblique) 180.0 0.0 true true (Sine trained NN)]
] -60.0 MRshow
6183 4491 M
495 0 V
6526 3664 M
5495 2374 L
4095 1036 L
2696 540 L
1875 876 L
-579 290 V
846 1436 L
2.000 UL
LT2
6075 4311 M
[ [(Helvetica-Oblique) 180.0 0.0 true true (Stoch. trained NN)]
] -60.0 MRshow
6183 4311 M
495 0 V
6526 3744 M
5495 2657 L
4095 1946 L
2696 1551 L
1875 1390 L
1296 1235 L
846 994 L
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Bookman-LightItalic Helvetica-Oblique
%%Pages: 1
%%Trailer
cleartomark
countdictstack
exch sub { end } repeat
restore
%%EOF
