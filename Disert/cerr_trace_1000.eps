%!PS-Adobe-2.0 EPSF-2.0
%%BoundingBox: 0 0 671 493
%%HiResBoundingBox: 0 0 668.5 490
%%Title: cerr_trace_1000.ps
%%Creator: gnuplot 3.7 patchlevel 1
%%CreationDate: Sun Feb  3 18:55:20 2002
%%EndComments
% EPSF created by ps2eps 1.64
%%BeginProlog
-80 556 translate
-90 rotate
save
countdictstack
mark
newpath
/showpage {} def
/setpagedevice {pop} def
%%EndProlog
%%Page 1 1
/gnudict 256 dict def
gnudict begin
/Color false def
/Solid false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
/vshift -60 def
/dl {10 mul} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow { currentpoint stroke M
  0 vshift R show } def
/Rshow { currentpoint stroke M
  dup stringwidth pop neg vshift R show } def
/Cshow { currentpoint stroke M
  dup stringwidth pop -2 div vshift R show } def
/UP { dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def } def
/DL { Color {setrgbcolor Solid {pop []} if 0 setdash }
 {pop pop pop Solid {pop []} if 0 setdash} ifelse } def
/BL { stroke userlinewidth 2 mul setlinewidth } def
/AL { stroke userlinewidth 2 div setlinewidth } def
/UL { dup gnulinewidth mul /userlinewidth exch def
      10 mul /udl exch def } def
/PL { stroke userlinewidth setlinewidth } def
/LTb { BL [] 0 0 0 DL } def
/LTa { AL [1 udl mul 2 udl mul] 0 setdash 0 0 0 setrgbcolor } def
/LT0 { PL [] 1 0 0 DL } def
/LT1 { PL [4 dl 2 dl] 0 1 0 DL } def
/LT2 { PL [2 dl 3 dl] 0 0 1 DL } def
/LT3 { PL [1 dl 1.5 dl] 1 0 1 DL } def
/LT4 { PL [5 dl 2 dl 1 dl 2 dl] 0 1 1 DL } def
/LT5 { PL [4 dl 3 dl 1 dl 3 dl] 1 1 0 DL } def
/LT6 { PL [2 dl 2 dl 2 dl 4 dl] 0 0 0 DL } def
/LT7 { PL [2 dl 2 dl 2 dl 2 dl 2 dl 4 dl] 1 0.3 0 DL } def
/LT8 { PL [2 dl 2 dl 2 dl 2 dl 2 dl 2 dl 2 dl 4 dl] 0.5 0.5 0.5 DL } def
/Pnt { stroke [] 0 setdash
   gsave 1 setlinecap M 0 0 V stroke grestore } def
/Dia { stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt } def
/Pls { stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
  } def
/Box { stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt } def
/Crs { stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke } def
/TriU { stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt  } def
/Star { 2 copy Pls Crs } def
/BoxF { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V  hpt2 0 V  0 vpt2 V
  hpt2 neg 0 V  closepath fill } def
/TriUF { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill } def
/TriD { stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt  } def
/TriDF { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill } def
/Pent { stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt } def
/PentF { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore } def
/Circle { stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt } def
/CircleF { stroke [] 0 setdash hpt 0 360 arc fill } def
/C0 { BL [] 0 setdash 2 copy moveto vpt 90 450  arc } bind def
/C1 { BL [] 0 setdash 2 copy        moveto
       2 copy  vpt 0 90 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C2 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 90 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C3 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C4 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 180 270 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C5 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 90 arc
       2 copy moveto
       2 copy  vpt 180 270 arc closepath fill
               vpt 0 360 arc } bind def
/C6 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 90 270 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C7 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 0 270 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C8 { BL [] 0 setdash 2 copy moveto
      2 copy vpt 270 360 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C9 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 270 450 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C10 { BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
       2 copy moveto
       2 copy vpt 90 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C11 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 180 arc closepath fill
       2 copy moveto
       2 copy  vpt 270 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C12 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 180 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C13 { BL [] 0 setdash  2 copy moveto
       2 copy  vpt 0 90 arc closepath fill
       2 copy moveto
       2 copy  vpt 180 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C14 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 90 360 arc closepath fill
               vpt 0 360 arc } bind def
/C15 { BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/Rec   { newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
       neg 0 rlineto closepath } bind def
/Square { dup Rec } bind def
/Bsquare { vpt sub exch vpt sub exch vpt2 Square } bind def
/S0 { BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare } bind def
/S1 { BL [] 0 setdash 2 copy vpt Square fill Bsquare } bind def
/S2 { BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare } bind def
/S3 { BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare } bind def
/S4 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare } bind def
/S5 { BL [] 0 setdash 2 copy 2 copy vpt Square fill
       exch vpt sub exch vpt sub vpt Square fill Bsquare } bind def
/S6 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare } bind def
/S7 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
       2 copy vpt Square fill
       Bsquare } bind def
/S8 { BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare } bind def
/S9 { BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare } bind def
/S10 { BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
       Bsquare } bind def
/S11 { BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
       Bsquare } bind def
/S12 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare } bind def
/S13 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
       2 copy vpt Square fill Bsquare } bind def
/S14 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
       2 copy exch vpt sub exch vpt Square fill Bsquare } bind def
/S15 { BL [] 0 setdash 2 copy Bsquare fill Bsquare } bind def
/D0 { gsave translate 45 rotate 0 0 S0 stroke grestore } bind def
/D1 { gsave translate 45 rotate 0 0 S1 stroke grestore } bind def
/D2 { gsave translate 45 rotate 0 0 S2 stroke grestore } bind def
/D3 { gsave translate 45 rotate 0 0 S3 stroke grestore } bind def
/D4 { gsave translate 45 rotate 0 0 S4 stroke grestore } bind def
/D5 { gsave translate 45 rotate 0 0 S5 stroke grestore } bind def
/D6 { gsave translate 45 rotate 0 0 S6 stroke grestore } bind def
/D7 { gsave translate 45 rotate 0 0 S7 stroke grestore } bind def
/D8 { gsave translate 45 rotate 0 0 S8 stroke grestore } bind def
/D9 { gsave translate 45 rotate 0 0 S9 stroke grestore } bind def
/D10 { gsave translate 45 rotate 0 0 S10 stroke grestore } bind def
/D11 { gsave translate 45 rotate 0 0 S11 stroke grestore } bind def
/D12 { gsave translate 45 rotate 0 0 S12 stroke grestore } bind def
/D13 { gsave translate 45 rotate 0 0 S13 stroke grestore } bind def
/D14 { gsave translate 45 rotate 0 0 S14 stroke grestore } bind def
/D15 { gsave translate 45 rotate 0 0 S15 stroke grestore } bind def
/DiaE { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke } def
/BoxE { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke } def
/TriUE { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke } def
/TriDE { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke } def
/PentE { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore } def
/CircE { stroke [] 0 setdash 
  hpt 0 360 arc stroke } def
/Opaque { gsave closepath 1 setgray fill grestore 0 setgray closepath } def
/DiaW { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke } def
/BoxW { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke } def
/TriUW { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke } def
/TriDW { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke } def
/PentW { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore } def
/CircW { stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke } def
/BoxFill { gsave Rec 1 setgray fill grestore } def
/MFshow {{dup dup 0 get findfont exch 1 get scalefont setfont
     [ currentpoint ] exch dup 2 get 0 exch rmoveto dup dup 5 get exch 4 get
     {show} {stringwidth pop 0 rmoveto}ifelse dup 3 get
     {2 get neg 0 exch rmoveto pop} {pop aload pop moveto}ifelse} forall} bind def
/MFwidth {0 exch {dup 3 get{dup dup 0 get findfont exch 1 get scalefont setfont
      5 get stringwidth pop add}
    {pop} ifelse} forall} bind def
/MLshow { currentpoint stroke M
  0 exch R MFshow } bind def
/MRshow { currentpoint stroke M
  exch dup MFwidth neg 3 -1 roll R MFshow } def
/MCshow { currentpoint stroke M
  exch dup MFwidth -2 div 3 -1 roll R MFshow } def
end
%%EndProlog
%%Page: 1 1
gnudict begin
gsave
50 50 translate
0.100 0.100 scale
90 rotate
0 -5040 translate
0 setgray
newpath
(Helvetica-Oblique) findfont 180 scalefont setfont
1.000 UL
LTb
0.500 UL
LTa
846 540 M
6048 0 V
1.000 UL
LTb
846 540 M
63 0 V
5985 0 R
-63 0 V
 stroke
738 540 M
[ [(Helvetica-Oblique) 180.0 0.0 true true (0.095)]
] -60.0 MRshow
0.500 UL
LTa
846 1152 M
6048 0 V
1.000 UL
LTb
846 1152 M
63 0 V
5985 0 R
-63 0 V
 stroke
738 1152 M
[ [(Helvetica-Oblique) 180.0 0.0 true true (0.1)]
] -60.0 MRshow
0.500 UL
LTa
846 1764 M
6048 0 V
1.000 UL
LTb
846 1764 M
63 0 V
5985 0 R
-63 0 V
 stroke
738 1764 M
[ [(Helvetica-Oblique) 180.0 0.0 true true (0.105)]
] -60.0 MRshow
0.500 UL
LTa
846 2376 M
6048 0 V
1.000 UL
LTb
846 2376 M
63 0 V
5985 0 R
-63 0 V
 stroke
738 2376 M
[ [(Helvetica-Oblique) 180.0 0.0 true true (0.11)]
] -60.0 MRshow
0.500 UL
LTa
846 2988 M
6048 0 V
1.000 UL
LTb
846 2988 M
63 0 V
5985 0 R
-63 0 V
 stroke
738 2988 M
[ [(Helvetica-Oblique) 180.0 0.0 true true (0.115)]
] -60.0 MRshow
0.500 UL
LTa
846 3600 M
6048 0 V
1.000 UL
LTb
846 3600 M
63 0 V
5985 0 R
-63 0 V
 stroke
738 3600 M
[ [(Helvetica-Oblique) 180.0 0.0 true true (0.12)]
] -60.0 MRshow
0.500 UL
LTa
846 4212 M
6048 0 V
1.000 UL
LTb
846 4212 M
63 0 V
5985 0 R
-63 0 V
 stroke
738 4212 M
[ [(Helvetica-Oblique) 180.0 0.0 true true (0.125)]
] -60.0 MRshow
0.500 UL
LTa
846 4824 M
6048 0 V
1.000 UL
LTb
846 4824 M
63 0 V
5985 0 R
-63 0 V
 stroke
738 4824 M
[ [(Helvetica-Oblique) 180.0 0.0 true true (0.13)]
] -60.0 MRshow
0.500 UL
LTa
846 540 M
0 4284 V
1.000 UL
LTb
846 540 M
0 63 V
0 4221 R
0 -63 V
 stroke
846 360 M
[ [(Helvetica-Oblique) 180.0 0.0 true true (0)]
] -60.0 MCshow
0.500 UL
LTa
1710 540 M
0 4284 V
1.000 UL
LTb
1710 540 M
0 63 V
0 4221 R
0 -63 V
 stroke
1710 360 M
[ [(Helvetica-Oblique) 180.0 0.0 true true (10)]
] -60.0 MCshow
0.500 UL
LTa
2574 540 M
0 4284 V
1.000 UL
LTb
2574 540 M
0 63 V
0 4221 R
0 -63 V
 stroke
2574 360 M
[ [(Helvetica-Oblique) 180.0 0.0 true true (20)]
] -60.0 MCshow
0.500 UL
LTa
3438 540 M
0 4284 V
1.000 UL
LTb
3438 540 M
0 63 V
0 4221 R
0 -63 V
 stroke
3438 360 M
[ [(Helvetica-Oblique) 180.0 0.0 true true (30)]
] -60.0 MCshow
0.500 UL
LTa
4302 540 M
0 4284 V
1.000 UL
LTb
4302 540 M
0 63 V
0 4221 R
0 -63 V
 stroke
4302 360 M
[ [(Helvetica-Oblique) 180.0 0.0 true true (40)]
] -60.0 MCshow
0.500 UL
LTa
5166 540 M
0 4284 V
1.000 UL
LTb
5166 540 M
0 63 V
0 4221 R
0 -63 V
 stroke
5166 360 M
[ [(Helvetica-Oblique) 180.0 0.0 true true (50)]
] -60.0 MCshow
0.500 UL
LTa
6030 540 M
0 4284 V
1.000 UL
LTb
6030 540 M
0 63 V
0 4221 R
0 -63 V
 stroke
6030 360 M
[ [(Helvetica-Oblique) 180.0 0.0 true true (60)]
] -60.0 MCshow
0.500 UL
LTa
6894 540 M
0 4284 V
1.000 UL
LTb
6894 540 M
0 63 V
0 4221 R
0 -63 V
 stroke
6894 360 M
[ [(Helvetica-Oblique) 180.0 0.0 true true (70)]
] -60.0 MCshow
1.000 UL
LTb
846 540 M
6048 0 V
0 4284 V
-6048 0 V
846 540 L
 stroke
3870 90 M
[ [(Helvetica-Oblique) 180.0 0.0 true true (Epoch)]
] -60.0 MCshow
1.000 UL
LT0
846 4514 M
932 2769 L
87 440 V
86 1388 V
87 -420 V
86 -1277 V
86 1013 V
87 254 V
86 -847 V
87 92 V
86 -509 V
86 -569 V
87 1441 V
86 241 V
87 -1757 V
86 786 V
86 -339 V
87 598 V
86 -843 V
87 654 V
86 -721 V
86 414 V
87 -811 V
86 963 V
87 634 V
86 -570 V
86 -1128 V
87 -52 V
86 -84 V
87 766 V
86 -368 V
86 464 V
87 299 V
86 469 V
87 -369 V
86 -843 V
86 -516 V
87 834 V
86 -297 V
87 91 V
86 -579 V
86 1763 V
87 -477 V
86 -1063 V
87 705 V
86 -1009 V
86 2331 V
87 -2430 V
86 815 V
87 -842 V
86 541 V
86 -112 V
87 -626 V
86 3125 V
87 -1142 V
86 -1984 V
86 973 V
87 361 V
86 451 V
87 -1396 V
86 -20 V
86 427 V
87 -914 V
86 500 V
87 830 V
86 -1404 V
1.000 UL
LT1
846 3600 M
57 -37 V
56 -36 V
57 -35 V
57 -35 V
57 -35 V
56 -34 V
57 -34 V
57 -33 V
57 -32 V
56 -32 V
57 -32 V
57 -31 V
56 -30 V
57 -30 V
57 -30 V
57 -29 V
56 -29 V
57 -29 V
57 -28 V
57 -27 V
56 -27 V
57 -27 V
57 -26 V
56 -26 V
57 -26 V
57 -25 V
57 -25 V
56 -24 V
57 -24 V
57 -24 V
57 -23 V
56 -23 V
57 -23 V
57 -22 V
56 -22 V
57 -22 V
57 -21 V
57 -21 V
56 -21 V
57 -20 V
57 -20 V
57 -20 V
56 -19 V
57 -19 V
57 -19 V
56 -19 V
57 -18 V
57 -18 V
57 -18 V
56 -17 V
57 -18 V
57 -17 V
57 -16 V
56 -17 V
57 -16 V
57 -16 V
56 -16 V
57 -15 V
57 -16 V
57 -15 V
56 -15 V
57 -14 V
57 -15 V
57 -14 V
56 -14 V
57 -13 V
57 -14 V
56 -13 V
57 -13 V
57 -13 V
57 -13 V
56 -13 V
57 -12 V
57 -12 V
57 -12 V
56 -12 V
57 -12 V
57 -11 V
56 -11 V
57 -12 V
57 -11 V
57 -10 V
56 -11 V
57 -10 V
57 -11 V
57 -10 V
56 -10 V
57 -10 V
57 -10 V
56 -9 V
57 -10 V
57 -9 V
57 -9 V
56 -9 V
57 -9 V
57 -9 V
57 -8 V
56 -9 V
57 -8 V
stroke
grestore
end
showpage
%%Trailer
cleartomark
countdictstack
exch sub { end } repeat
restore
%%EOF
